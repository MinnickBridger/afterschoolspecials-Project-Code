type BudgetCategory {
	id: ID!
	budgetID: String!
	title: String!
	precent: Float
	lineItems: [LineItem]
}

type BudgetCategoryConnection {
	items: [BudgetCategory]
	nextToken: String
}

input CreateBudgetCategoryInput {
	budgetID: String!
	title: String!
	precent: Float
}

input CreateLineItemInput {
	userID: String!
	categoryID: String!
	budgetID: String!
	price: Float!
}

input CreateUserBudgetInput {
	userID: String!
}

input DeleteBudgetCategoryInput {
	id: ID!
}

input DeleteLineItemInput {
	id: ID!
}

input DeleteUserBudgetInput {
	id: ID!
}

type LineItem {
	id: ID!
	userID: String!
	categoryID: String!
	budgetID: String!
	price: Float!
}

type LineItemConnection {
	items: [LineItem]
	nextToken: String
}

type Mutation {
	createLineItem(input: CreateLineItemInput!): LineItem
	updateLineItem(input: UpdateLineItemInput!): LineItem
	deleteLineItem(input: DeleteLineItemInput!): LineItem
	createBudgetCategory(input: CreateBudgetCategoryInput!): BudgetCategory
	updateBudgetCategory(input: UpdateBudgetCategoryInput!): BudgetCategory
	deleteBudgetCategory(input: DeleteBudgetCategoryInput!): BudgetCategory
	createUserBudget(input: CreateUserBudgetInput!): UserBudget
	updateUserBudget(input: UpdateUserBudgetInput!): UserBudget
	deleteUserBudget(input: DeleteUserBudgetInput!): UserBudget
}

type Query {
	getLineItem(id: ID!): LineItem
	listLineItems(filter: TableLineItemFilterInput, limit: Int, nextToken: String): LineItemConnection
	getBudgetCategory(id: ID!): BudgetCategory
	listBudgetCategories(filter: TableBudgetCategoryFilterInput, limit: Int, nextToken: String): BudgetCategoryConnection
	getUserBudget(id: ID!): UserBudget
	listUserBudgets(filter: TableUserBudgetFilterInput, limit: Int, nextToken: String): UserBudgetConnection
}

type Subscription {
	onCreateLineItem(
		id: ID,
		userID: String,
		categoryID: String,
		budgetID: String,
		price: Float
	): LineItem
		@aws_subscribe(mutations: ["createLineItem"])
	onUpdateLineItem(
		id: ID,
		userID: String,
		categoryID: String,
		budgetID: String,
		price: Float
	): LineItem
		@aws_subscribe(mutations: ["updateLineItem"])
	onDeleteLineItem(
		id: ID,
		userID: String,
		categoryID: String,
		budgetID: String,
		price: Float
	): LineItem
		@aws_subscribe(mutations: ["deleteLineItem"])
	onCreateBudgetCategory(
		id: ID,
		budgetID: String,
		title: String,
		precent: Float
	): BudgetCategory
		@aws_subscribe(mutations: ["createBudgetCategory"])
	onUpdateBudgetCategory(
		id: ID,
		budgetID: String,
		title: String,
		precent: Float
	): BudgetCategory
		@aws_subscribe(mutations: ["updateBudgetCategory"])
	onDeleteBudgetCategory(
		id: ID,
		budgetID: String,
		title: String,
		precent: Float
	): BudgetCategory
		@aws_subscribe(mutations: ["deleteBudgetCategory"])
	onCreateUserBudget(id: ID, userID: String): UserBudget
		@aws_subscribe(mutations: ["createUserBudget"])
	onUpdateUserBudget(id: ID, userID: String): UserBudget
		@aws_subscribe(mutations: ["updateUserBudget"])
	onDeleteUserBudget(id: ID, userID: String): UserBudget
		@aws_subscribe(mutations: ["deleteUserBudget"])
}

input TableBooleanFilterInput {
	ne: Boolean
	eq: Boolean
}

input TableBudgetCategoryFilterInput {
	id: TableIDFilterInput
	budgetID: TableStringFilterInput
	title: TableStringFilterInput
	precent: TableFloatFilterInput
}

input TableFloatFilterInput {
	ne: Float
	eq: Float
	le: Float
	lt: Float
	ge: Float
	gt: Float
	contains: Float
	notContains: Float
	between: [Float]
}

input TableIDFilterInput {
	ne: ID
	eq: ID
	le: ID
	lt: ID
	ge: ID
	gt: ID
	contains: ID
	notContains: ID
	between: [ID]
	beginsWith: ID
}

input TableIntFilterInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	contains: Int
	notContains: Int
	between: [Int]
}

input TableLineItemFilterInput {
	id: TableIDFilterInput
	userID: TableStringFilterInput
	categoryID: TableStringFilterInput
	budgetID: TableStringFilterInput
	price: TableFloatFilterInput
}

input TableStringFilterInput {
	ne: String
	eq: String
	le: String
	lt: String
	ge: String
	gt: String
	contains: String
	notContains: String
	between: [String]
	beginsWith: String
}

input TableUserBudgetFilterInput {
	id: TableIDFilterInput
	userID: TableStringFilterInput
}

input UpdateBudgetCategoryInput {
	id: ID!
	budgetID: String
	title: String
	precent: Float
}

input UpdateLineItemInput {
	id: ID!
	userID: String
	categoryID: String
	budgetID: String
	price: Float
}

input UpdateUserBudgetInput {
	id: ID!
	userID: String
}

type UserBudget {
	id: ID!
	userID: String!
	categories: [BudgetCategory]
}

type UserBudgetConnection {
	items: [UserBudget]
	nextToken: String
}